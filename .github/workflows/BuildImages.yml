name: Build Image

on:
  push:
    branches: 
      - "develop"
    paths:
      - "src/modules/**"
      - "src/build_dist"
      - "config/**"
      - ".github/workflows/BuildImages.yml"
      - ".github/workflow_config.yml"
      - ".github/scripts/setup_matrix.py"
  pull_request:
    types: [opened, edited, reopened, synchronize]
    paths:
      - "src/**"
      - "config/**"
      - ".github/workflows/BuildImages.yml"
      - ".github/scripts/setup_matrix.py"
      - ".github/workflow_config.yml"
  workflow_dispatch:

# Allow to stop obsolete workflows
concurrency:
  group: ci-buildtrain-"${{ github.ref }}"-1
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: "${{ steps.set-matrix.outputs.matrix }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Matrix
        id: set-matrix
        run: |
          PY_INT=$(command -v python3)
          CONFIG="${{ github.workspace }}/.github/workflow_config.yml"
          GROUP="buildtest"
          $PY_INT "${{ github.workspace }}/.github/scripts/setup_matrix.py" -c "$CONFIG" -g "$GROUP" --git

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: "${{ fromJson(needs.setup.outputs.matrix) }}"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: repository
          submodules: true

      - name: Afficher la configuration du build
        run: |
          echo "Configuration du build : ${{ matrix.config }}"
        
      - name: Afficher le contenu du script de construction
        run: |
          echo "Contenu de repository/.github/actions/build:"
          cat repository/.github/actions/build/* || echo "Pas de fichier dans le rÃ©pertoire."

      - name: Build image
        id: build
        uses: ./repository/.github/actions/build
        with:
          config: "${{ matrix.config }}"

      - name: Renommer le fichier image
        id: move-image
        if: always()
        shell: bash
        run: |
          source repository/src/config
          NOW="$(date +"%Y-%m-%d")"
          IMAGE="${NOW}-${DIST_NAME}-${DIST_VERSION}-${{ steps.build.outputs.type }}-${{ steps.build.outputs.sbc }}"
          
          mv repository/src/workspace/*.img "$IMAGE.img"

          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Upload failed Logfile
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-${{ steps.move-image.outputs.image }}.log
          path: repository/src/build.log

      - name: Compression de l'image
        shell: bash
        run: |
          CPU_COUNT="$(nproc)"
          echo -e "\e[32mUsing ${CPU_COUNT} Cores for compression...\e[0m"
          xz -efkvz9T"${CPU_COUNT}" "$IMAGE.img" || true

      - name: Calculer les checksums
        shell: bash
        run: |
          sha256sum "$IMAGE.img" > "$IMAGE.img.sha256"
          sha256sum "$IMAGE.img.xz" > "$IMAGE.img.xz.sha256"

      - name: Upload Compressed Image
        uses: actions/upload-artifact@v4
        with:
          name: "$IMAGE.img.xz"
          path: "$IMAGE.img.xz"

      - name: Upload Compressed Image Checksum
        uses: actions/upload-artifact@v4
        with:
          name: "$IMAGE.img.xz.sha256"
          path: "$IMAGE.img.xz.sha256"

      - name: Upload Image Checksum
        uses: actions/upload-artifact@v4
        with:
          name: "$IMAGE.img.sha256"
          path: "$IMAGE.img.sha256"
